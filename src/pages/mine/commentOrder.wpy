<style lang="scss">
  .navigateTop {
    width: 750rpx;
    height: 40rpx;
    padding-top: 30rpx;
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-direction: row;
    text {
      padding: 0 21rpx;
      font-size: 28rpx;
      line-height: 40rpx;
      color: #999;
    }
    text.z-on {
      color: #333;
      border-bottom: 2px solid #FF8900;
    }
  }
  .scrollBox {
    position: fixed;
    left: 0rpx;
    right: 0rpx;
    top: 0rpx;
    bottom: 0;
  }
  .orderBox {
    width: 710rpx;
    box-shadow: -4px -4px 10px 0 rgba(162,162,162,0.05), 4px 4px 10px 0 rgba(162,162,162,0.05);
    background-color: #fcfcfc;
    border-radius: 6rpx;
    margin: 0 auto;
    margin-top: 10rpx;
    overflow: visible;
    margin-bottom: 40rpx;
    .orderBox-item-top {
      width: 680rpx;
      height: 33rpx;
      padding-bottom: 12rpx;
      border-bottom: 1rpx solid rgba(30,40,48,0.1);
      font-size: 0;
      text {
        font-size: 24rpx;
        color: #666;
        margin-left: 15rpx;
        padding-right: 22rpx;
        background-repeat: no-repeat;
        background-size: 12rpx auto;
        background-position: right center;
      }
    }
    .orderBox-item-content {
      width: 640rpx;
      height: 140rpx;
      padding-top: 40rpx;
      padding-bottom: 40rpx;
      padding-left: 25rpx;
      padding-right: 15rpx;
      border-bottom: 1rpx solid rgba(30,40,48,0.1);
      image {
        width: 160rpx;
        height: 140rpx;
        float: left;
      }
      .orderBox-item-content-content {
        width: 453rpx;
        height: 140rpx;
        float: right;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        .orderBox-item-content-content-title {
          display: block;
          font-size: 26rpx;
          line-height: 37rpx;
          color: #333;
        }
        .orderBox-item-content-content-taste {
          display: block;
          font-size: 22rpx;
          line-height: 30rpx;
          color: #8D9092;
        }
        .orderBox-item-content-content-num {
          width: 453rpx;
          height: 40rpx;
        }
      }
    }
    .orderBox-bottom {
      width: 670rpx;
      height: 44px;
      padding: 15rpx;
      padding-right: 25rpx;
      padding-top: 0;
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: flex-end;
      text {
        font-size: 26rpx;
        color: #333;
        padding: 4rpx 20rpx;
        line-height: 37rpx;
        border: 1rpx solid rgba(43,49,55,0.27);
        border-radius: 4rpx;
        margin-left: 30rpx;
      }
    }
  }
</style>
<template>
  <view class="container" style="align-items: flex-end;">
    <scroll-view scroll-y bindscrolltolower="judgeScrollBottom" class="scrollBox scrollJudge">
      <view wx:for="{{ judgeData }}" wx:for-item="itemBox" wx:key="{{ itemBox.orderNo }}" data-orderNo="{{ itemBox.orderNo }}"  @tap.stop="orderDetail" class="orderBox">
        <view wx:for="{{ itemBox.orderInfo }}" wx:for-item="itemSelf" class="orderBox-item" style="width: 680rpx; padding: 15rpx;">
          <view class="orderBox-item-top">
            <text style="background-image: url('http://p6nvs9qd1.bkt.clouddn.com/images/home/you_xiao@2x.png')">{{ itemSelf.shopName }}</text>
          </view>
          <view  wx:for="{{ itemSelf.proInfo }}" wx:for-item="item"  class="orderBox-item-content">
            <image  src="{{ item.pre_pic_url }}" ></image>
            <view class="orderBox-item-content-content">
              <view style="display: block;">
                <text class="orderBox-item-content-content-title">{{ item.proName }}</text>
                <text class="orderBox-item-content-content-taste">#{{ item.taste }}</text>
              </view>
              <view class="orderBox-item-content-content-num" >
                <text style="font-size: 24rpx; color: #1E2830; float: left;">￥{{ item.allValue/100 }}</text>
                <text style="font-size: 24rpx; color: #8D9092; float: right;">x{{ item.buyNum }}</text>
              </view>
            </view>
          </view>
        </view>
        <view class="orderBox-bottom">
          <text data-orderNo="{{ itemBox.orderNo }}" @tap.stop="ToOrderLogistics">查看物流</text>
          <text data-orderNo="{{ itemBox.orderNo }}" data-name="{{ itemBox.orderInfo[0].proInfo[0].proName }}" data-pic="{{ itemBox.orderInfo[0].proInfo[0].pre_pic_url }}" @tap.stop="ToOrderJudge">评价</text>
        </view>
      </view>
    </scroll-view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import * as api from '@/server/api'
//  import * as mineMethods from '@/util/mine'
  @connect({
  })

  export default class consignmentOrder extends wepy.page {
    config = {
      navigationBarTitleText: '待评价'
    }
    components = {

    }

    data = {
      judgeData: null,
      judgeNum: 1,
      judgeLock: true
    }

    computed = {

    }

    methods = {
      orderDetail: function (event) {
        var _thisId = event.currentTarget.dataset.orderno
        wepy.navigateTo({
          url: 'orderDetail?orderno=' + _thisId
        })
      },
      ToOrderLogistics: function (event) {
        var _thisId = event.currentTarget.dataset.orderno
        wepy.navigateTo({
          url: 'orderLogistics?orderno=' + _thisId
        })
      },
      ToOrderJudge: function (event) {
        var _thisId = event.currentTarget.dataset.orderno
        var _thisName = event.currentTarget.dataset.name
        var _thisPic = event.currentTarget.dataset.pic
        wepy.navigateTo({
          url: 'judgeDetail?orderno=' + _thisId + '&name=' + _thisName + '&pic=' + _thisPic
        })
      },
      judgeScrollBottom: function () {
        var _this = this
        if (this.judgeLock === 'lock') {
          return
        }
        if (_this.judgeLock) {
          _this.judgeLock = false
          _this.judgeNum = _this.judgeNum + 1
          api.getAllOrder({type: 1, currentPage: _this.judgeNum}).then((body) => {
            _this.judgeData = _this.judgeData.concat(body.body.orderList)
            _this.judgeLock = true
            if (_this.judgeNum >= body.body.pageInfo.info.tatol) {
              this.judgeLock = 'lock'
            }
            _this.$apply()
          })
        }
        console.log('judge滑动到底部啦')
      }
    }

    events = {
    }

    onShow() {
      var _this = this
      api.getAllOrder({type: 3}).then((body) => {
        console.log(body)
        _this.judgeData = body.body.orderList
        if (_this.judgeNum >= body.body.pageInfo.info.tatol) {
          this.judgeLock = 'lock'
        }
        _this.$apply()
      })
    }
  }
</script>
